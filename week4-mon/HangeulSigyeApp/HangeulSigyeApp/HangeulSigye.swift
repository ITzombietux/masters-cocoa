//
//  HangeulSigye.swift
//  HangeulSigyeApp
//
//  Created by zombietux on 2020/11/23.
//

import Foundation

struct HangeulSigye {
    
    private(set) var amPm: String
    private(set) var hour: Int
    private(set) var minute: Int
    private(set) var second: Int
    private(set) var sunOrMoon: String
    private let hourDic: [Int : String] = [0:"ÏòÅ", 1:"Ìïú", 2:"Îëê", 3:"ÏÑ∏", 4:"ÎÑ§", 5:"Îã§ÏÑØ", 6:"Ïó¨ÏÑØ", 7:"ÏùºÍ≥±", 8:"Ïó¨Îçü", 9:"ÏïÑÌôâ", 10:"Ïó¥", 11:"Ïó¥Ìïú", 12:"Ïó¥Îëê", 13:"Ìïú", 14:"Îëê", 15:"ÏÑ∏", 16:"ÎÑ§", 17:"Îã§ÏÑØ", 18:"Ïó¨ÏÑØ", 19:"ÏùºÍ≥±", 20:"Ïó¨Îçü", 21:"ÏïÑÌôâ", 22:"Ïó¥", 23:"Ïó¥Ìïú", 24:"Ïó¥Îëê"]
    private let minuteDic: [Int : String] = [0:"ÏòÅ" ,1:"Ïùº", 2:"Ïù¥", 3:"ÏÇº", 4:"ÏÇ¨", 5:"Ïò§", 6:"Ïú°", 7:"Ïπ†", 8:"Ìåî", 9:"Íµ¨"]
    private let secondDic: [Int : String] = [1:"Ïùº", 2:"Ïù¥", 3:"ÏÇº", 4:"ÏÇ¨", 5:"Ïò§", 6:"Ïú°", 7:"Ïπ†", 8:"Ìåî", 9:"Íµ¨"]

    init(apPm: String ,hour: Int, minute: Int, second: Int) {
        self.amPm = apPm
        self.hour = hour
        self.minute = minute
        self.second = second
        
        if hour >= 7 && hour < 19 {
            self.sunOrMoon = "‚òÄÔ∏è"
        } else {
            self.sunOrMoon = "üåô"
        }
    }
    
    //hh:mm:ss a => ÌïúÍ∏ÄÎ°ú
    func make() -> [String] {
        var result = [String]()
        result.append(self.amPm)
        result.append(makeHour())
        result.append(makeMinute())
        result.append(makeSecond())
        result.append(self.sunOrMoon)
        
        return result
    }
    
    private func makeHour() -> String {
        return "\(hourDic[self.hour]!)"
    }
    
    private func makeMinute() -> String {
        if String(self.minute).count == 2 {
            let minuteArr = String(self.minute).map { String($0) }
            let tens = minuteDic[Int(minuteArr[0]) ?? 0] ?? ""
            let units = minuteDic[Int(minuteArr[1]) ?? 0] ?? ""
            
            if tens != "Ïùº" {
                if units != "ÏòÅ" {
                    return "\(tens)Ïã≠\(units)"
                } else {
                    return "\(tens)Ïã≠"
                }
            } else {
                if units != "ÏòÅ" {
                    return "Ïã≠\(units)"
                } else {
                    return "Ïã≠"
                }
            }
        } else {
            return "\(minuteDic[self.minute]!)"
        }
    }
    
    private func makeSecond() -> String {
        if String(self.second).count == 2 {
            let secondArr = String(self.second).map { String($0) }
            let tens = secondDic[Int(secondArr[0]) ?? 0] ?? ""
            let units = secondDic[Int(secondArr[1]) ?? 0] ?? ""
            
            if tens != "Ïùº" {
                return "\(tens)Ïã≠\(units)Ï¥à"
            } else {
                return "Ïã≠\(units)Ï¥à"
            }
        } else if self.second == 0 {
            return "Ï†ïÍ∞Å"
        } else {
            return "\(secondDic[self.second]!)Ï¥à"
        }
    }
}
